@inject IJSRuntime JsRuntime
@inject IDecodeQrCodesRepository DecodeQrCodesRepository
@using SixLabors.ImageSharp
@using Adapters.Decoding

@page "/scan"


<PageTitle>Lock Escape</PageTitle>

<div class="container-fluid d-flex justify-content-center align-items-center w-100 h-75">
    <div class="row d-flex flex-wrap">
        <div class="col">
            <div class="card border-primary bg-primary rounded-0">
                <div class="card-header text-center">
                    <h4 class="text-white">Scan QR code from your teacher!</h4>
                </div>
                <div class="card-body d-flex justify-content-center text-white bg-white">
                    <video id="videoFeed" width="320" height="240"></video>
                    <canvas class="d-none" id="currentFrame" width="320" height="240"></canvas><br/>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await JsRuntime.InvokeVoidAsync("startVideo", "videoFeed");
        while (true)
        {
            await Task.Delay(500);
            await CaptureFrame();
        }
    }

    private async Task CaptureFrame()
    {
        await JsRuntime.InvokeAsync<string>("getFrame", "videoFeed", "currentFrame", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public void ProcessImage(string imageString)
    {
        var imageData = Convert.FromBase64String(imageString.Split(',')[1]);
        var image = Image.Load(imageData);
        var url = DecodeQrCodesRepository.DecodeQrCodeToUrl(imageData, image.Width, image.Height);
    }
}